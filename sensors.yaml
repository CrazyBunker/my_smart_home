- platform: template
  sensors: !include sensors/template.yaml

- platform: command_line
  name: CPU Temperature
  command: /usr/bin/sensors -j | python3 -c "import sys, json; print(json.load(sys.stdin)['atk0110-acpi-0']['CPU Temperature']['temp1_input'])"
  unit_of_measurement: "°C"
  scan_interval: 60

- platform: command_line
  name: MB Temperature
  command: /usr/bin/sensors -j | python3 -c "import sys, json; print(json.load(sys.stdin)['atk0110-acpi-0']['MB Temperature']['temp2_input'])"
  unit_of_measurement: "°C"
  scan_interval: 60

- platform: command_line
  name: Fan CPU
  command: /usr/bin/sensors -j | python3 -c "import sys, json; print(json.load(sys.stdin)['atk0110-acpi-0']['CPU FAN Speed']['fan1_input'])"
  unit_of_measurement: "RPM"
  scan_interval: 60

- platform: command_line
  name: Коммуналка
  command: /home/hass/python-scripts/getTotalDebet.py 
  unit_of_measurement: "RUB"
  scan_interval: 3600

- platform: command_line
  name: Электроэнергия
  command: /home/hass/python-scripts/getTotalDebetTns.py 
  unit_of_measurement: "RUB"
  scan_interval: 7200


  #- platform: command_line
  #  name: Fan SYS
  #  command: /usr/bin/sensors -j | python3 -c "import sys, json; print(json.load(sys.stdin)['w83627thf-isa-0290']['fan1']['fan1_input'])"
  #  unit_of_measurement: "RPM"
  #  scan_interval: 30

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: disk_use_percent
      arg: /var/lib/database
    - type: memory_use_percent
    - type: swap_use_percent
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: processor_use
      #      #- platform: sql
      #      #  db_url: !secret mysql_db
      #      #  queries:
      #      #    - name: Расход холодной воды за день
      #      #      query: "select IF (MAX(state)-MIN(state) is NULL, 0, ROUND(MAX(state)-MIN(state),3)) as state from states where entity_id = 'sensor.kholodnaia_voda' AND last_updated BETWEEN CONVERT_TZ(CURDATE(), 'SYSTEM', '+00:00') AND CONVERT_TZ(NOW(), 'SYSTEM', '+00:00');" 
      #      #      #"select ROUND(MAX(state)-MIN(state),3) as state from states where entity_id = 'sensor.kholodnaia_voda' AND last_updated BETWEEN CONVERT_TZ(CURDATE(), 'SYSTEM', '+00:00') AND CONVERT_TZ(NOW(), 'SYSTEM', '+00:00');"
      #      #      column: "state"
      #      #      unit_of_measurement: "м³"
      #      #    - name: Расход горячей воды за день
      #      #      query: "select IF (MAX(state)-MIN(state) is NULL, 0, ROUND(MAX(state)-MIN(state),3)) as state from states where entity_id = 'sensor.goriachaia_voda' AND last_updated BETWEEN CONVERT_TZ(CURDATE(), 'SYSTEM', '+00:00') AND CONVERT_TZ(NOW(), 'SYSTEM', '+00:00');"
      #      #      #      "select ROUND(MAX(state)-MIN(state),3) as state from states where entity_id = 'sensor.goriachaia_voda' AND last_updated BETWEEN CONVERT_TZ(CURDATE(), 'SYSTEM', '+00:00') AND CONVERT_TZ(NOW(), 'SYSTEM', '+00:00');"
      #      #      column: "state"
      #      #      unit_of_measurement: "м³"
      #
      #
      #      #- platform: influxdb
      #      #  host: !secret influx_host 
      #      #  username: !secret influx_user
      #      #  password: !secret influx_password
      #      #  queries:
      #      #  - name: "Расход воды за день"
      #      #    unit_of_measurement: "m²" 
      #      #    value_template:  '{{ value | round(1) }}'
      #      #    group_function: "difference"
      #      #    where: '"entity_id" = ''kholodnaia_voda'' and time > now() - 30h'
      #      #    measurement: count_water
      #      #    field: value
      #      #    database: !secret influx_db
      #- platform: snmp
      #  name: МФУ тонер
      #  unit_of_measurement: '%'
      #  host: 192.168.2.27
      #  baseoid: .1.3.6.1.2.1.43.11.1.1.9.1.1
      #  value_template: "{{(value | int) | int}}"
      #- platform: snmp
      #  name: МФУ состояние
      #  unit_of_measurement: 'state'
      #  host: 192.168.2.27
      #  baseoid: .1.3.6.1.2.1.25.3.5.1.1.1
      #  value_template: | 
      #          {% if ( value | int ) == 1 %}
      #          other
      #          {% elif ( value | int ) == 2 %}
      #          unknown
      #          {% elif ( value | int ) == 3 %}
      #          idle
      #          {% elif ( value | int ) == 4 %}
      #          printing
      #          {% elif ( value | int ) == 5 %}
      #          warmup
      #          {% endif %} 
      #
      #- platform: snmp
      #  name: МФУ счетчик страниц
      #  unit_of_measurement: 'count'
      #  host: 192.168.2.27
      #  baseoid: .1.3.6.1.4.1.1347.43.10.1.1.12.1.1
