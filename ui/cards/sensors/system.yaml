- type: custom:button-card
  entity: 'sensor.cpu_temperature'
  icon: 'mdi:raspberry-pi'
  aspect_ratio: 1/1.2
  name: HassOS
  styles:
    card:
      - color: ivory
      - font-size: 10px
      - text-shadow: 0px 0px 5px black
      - text-transform: capitalize
    grid:
      - grid-template-areas: '"i temp" "temp2 temp2" "n n" "cpu cpu" "ram ram" "root root" "data data"'
      - grid-template-columns: 1fr 1fr
      - grid-template-rows: 1fr 1fr min-content min-content min-content min-content min-content
    name:
      - font-weight: bold
      - font-size: 13px
      - color: white
      - align-self: middle
      - justify-self: start
      - padding-bottom: 4px
    img_cell:
      - justify-content: start
      - align-items: start
      - margin: none
    icon:
      - color: >
          [[[
            if (entity.state < 60) return 'lime';
            if (entity.state >= 60 && entity.state < 80) return 'orange';
            else return 'red';
          ]]]
      - width: 40%
      - margin-top: -10%
    custom_fields:
      temp:
        - align-self: start
        - justify-self: end
      temp2:
        - align-self: start
        - justify-self: end
      cpu:
        - padding-bottom: 2px
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.processor_use_percent"].state > 80) return "red"; ]]]'
      ram:
        - padding-bottom: 2px
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.memory_use_percent"].state > 80) return "red"; ]]]'
      root:
        - padding-bottom: 2px
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.disk_use_percent"].state > 80) return "red"; ]]]'
      data:
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.disk_use_percent_var_lib_database"].state > 80) return "red"; ]]]'
  custom_fields:
    temp: >
      [[[
        return `<ha-icon
          icon="mdi:thermometer"
          style="width: 12px; height: 12px; color: yellow;">
          </ha-icon>CPU: <span>${entity.state}Â°C</span>`
      ]]]
    temp2: >
      [[[
        return `<ha-icon
          icon="mdi:thermometer"
          style="width: 12px; height: 12px; color: yellow;">
          </ha-icon>MB: <span>${states['sensor.mb_temperature'].state}Â°C</span>`
      ]]]
    cpu: >
      [[[
        return `<ha-icon
          icon="mdi:server"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>CPU: <span style="color: var(--text-color-sensor);">${states['sensor.processor_use_percent'].state}%</span></span>`
      ]]]
    ram: >
      [[[
        return `<ha-icon
          icon="mdi:memory"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>RAM: <span style="color: var(--text-color-sensor);">${states['sensor.memory_use_percent'].state}%</span></span>`
      ]]]
    root: >
      [[[
        return `<ha-icon
          icon="mdi:harddisk"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>Root: <span style="color: var(--text-color-sensor);">${states['sensor.disk_use_percent'].state}%</span></span>`
      ]]]
    data: >
      [[[
        return `<ha-icon
          icon="mdi:harddisk"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>Data: <span style="color: var(--text-color-sensor);">${states['sensor.disk_use_percent_var_lib_database'].state}%</span></span>`
      ]]]

